---
title: "Supplemental Example"
subtitle: "Predicting Factor Scores vs. True Latent Variables"
format:
  pdf:
    toc: true
  gfm:
    toc: true
---

```{r}
library(lavaan)
library(ggplot2)
```

The generating model is basically the same as Example 1 in the manuscript, but with a much larger sample size and an additional predictor $w$ for predicting the latent variable $eta$.

```{r}
set.seed(1127)
# Simulation condition
num_obs <- 5000  # small sample per group
# Mean of predictor variable w
mean_w <- c(1, 2)
gamma <- 0.5  # coefficient of w on eta
# Simulate scalar invariant data with same mean
lambda <- c(0.9, 0.7, 0.5)
nu <- c(0, 0, 0)
theta <- diag(1 - lambda^2)
# Group 1
psi1 <- 1.6
alpha1 <- 0
# Group 2
psi2 <- 0.4
alpha2 <- 0.8
# Function for data generation
gendata <- function(nobs, lambda1, lambda2 = lambda1,
                    nu1, nu2 = nu1, theta1, theta2 = theta1,
                    psi1, psi2, alpha1, alpha2) {
    zero_p <- 0 * lambda  # zero vector of length p (for convenience)
    vw_psi_theta1 <- rbind(
        c(1, 0, zero_p),
        c(0, psi1, zero_p),
        cbind(0, zero_p, theta1)
    )
    w_eta_eps1 <- MASS::mvrnorm(nobs,
        mu = c(mean_w[1], alpha1, 0 * lambda1),
        Sigma = vw_psi_theta1, empirical = TRUE
    )
    w1 <- w_eta_eps1[, 1]
    eta1 <- w1 * gamma + w_eta_eps1[, 2]
    eps1 <- w_eta_eps1[, -(1:2)]
    y1 <- t(nu1 + t(tcrossprod(eta1, lambda1) + eps1))
    vw_psi_theta2 <- rbind(
        c(1, 0, zero_p),
        c(0, psi2, zero_p),
        cbind(0, zero_p, theta2)
    )
    w_eta_eps2 <- MASS::mvrnorm(nobs,
        mu = c(mean_w[2], alpha2, 0 * lambda),
        Sigma = vw_psi_theta2, empirical = TRUE
    )
    w2 <- w_eta_eps2[, 1]
    eta2 <- w2 * gamma + w_eta_eps2[, 2]
    eps2 <- w_eta_eps2[, -(1:2)]
    y2 <- t(nu2 + t(tcrossprod(eta2, lambda2) + eps2))
    out <- rbind(cbind(eta1, y1, group = 1, w = w1),
                 cbind(eta2, y2, group = 2, w = w2))
    out <- data.frame(out)
    out$group <- factor(out$group)
    colnames(out) <- c("eta", paste0("y", seq_along(lambda)), "group", "w")
    out
}
dat_y <- gendata(num_obs, lambda1 = lambda, nu1 = nu, theta1 = theta,
                 psi1 = psi1, psi2 = psi2, alpha1 = alpha1, alpha2 = alpha2)
```

### Strict invariance model

The result below confirms that strict invariance is tenable with the simulated data.

```{r}
#| label: example-1-strict-invariance
strict_fit <- cfa(
    "
    f =~ NA * y1 + y2 + y3
    f ~~ c(1, NA) * f
    ",
    data = dat_y,
    # std.lv = TRUE,
    group = "group",
    group.equal = c("loadings", "intercepts", "residuals"),
    likelihood = "wishart"
)
summary(strict_fit)
```

## Regression Factor Scores with Group-Specific Latent Distributions

```{r}
# Regression factor scores
dat_y$fsyr <- lavPredict(strict_fit, assemble = TRUE)$f
dat_y |>
    ggplot(aes(x = eta, y = fsyr, col = group)) +
    geom_point(alpha = 0.1, size = 0.1) +
    geom_smooth(method = "lm", se = FALSE, fullrange = TRUE)
```

### Examining Group $\times$ $w$ interaction

The code below shows that using regression factor scores in place of $\eta$ as the outcome results in a spurious interaction.

```{r}
# No interaction with true latent variable
lm(eta ~ w * group, data = dat_y) |> summary()
# Spurious interaction with regression factor scores
lm(fsyr ~ w * group, data = dat_y) |> summary()
```

## Regression Factor Scores with Common Latent Distributions

```{r}
# Function for scoring matrix
compute_a_reg <- function(lambda, theta, psi) {
    covy <- lambda %*% psi %*% t(lambda) + theta
    ginvcovy <- MASS::ginv(covy)
    tlam_invcov <- crossprod(lambda, ginvcovy)
    psi %*% tlam_invcov
}
# Function for computing factor scores with common distributions
compute_fscore <- function(y, lambda, nu, theta,
                           psi, alpha) {
    y1c <- t(as.matrix(y))
    meany <- lambda %*% alpha + nu
    y1c <- y1c - as.vector(meany)
    a_mat <- compute_a_reg(lambda, psi = psi, theta = theta)
    t(a_mat %*% y1c + as.vector(alpha))
}
strict_pars <- lavInspect(strict_fit, what = "est")
fscores_reg3 <- list(
    `1` = compute_fscore(
        dat_y[dat_y$group == 1, 2:4],
        lambda = strict_pars[[1]]$lambda,
        theta = strict_pars[[1]]$theta,
        nu = strict_pars[[1]]$nu,
        psi = 1,
        alpha = 0.5
    ),
    `2` = compute_fscore(
        dat_y[dat_y$group == 2, 2:4],
        lambda = strict_pars[[2]]$lambda,
        theta = strict_pars[[2]]$theta,
        nu = strict_pars[[2]]$nu,
        psi = 1,
        alpha = 0.5
    )
)
# Add to data
dat_y$fsyrc <- do.call(rbind, fscores_reg3)
dat_y |>
    ggplot(aes(x = eta, y = fsyrc, col = group)) +
    geom_point(alpha = 0.1, size = 0.1) +
    geom_smooth(method = "lm", se = FALSE, fullrange = TRUE)
```

### Examining Group $\times$ $w$ interaction

Using the same latent distribution for computing factor scores avoids the spurious interaction.

```{r}
lm(eta ~ w * group, data = dat_y) |> summary()
lm(fsyrc ~ w * group, data = dat_y) |> summary()
```

## Including $w$ When Computing Regression Factor Scores

Another possible option is to use covariate-informed factor scores [see @xxx] by including $w$ in the strict invariance model.

```{r}
#| label: example-1-strict-invariance-w
strict_w_fit <- cfa(
    "
    f =~ NA * y1 + y2 + y3
    f ~~ c(1, NA) * f
    f ~ w
    ",
    data = dat_y,
    # std.lv = TRUE,
    group = "group",
    group.equal = c("loadings", "intercepts", "residuals"),
    likelihood = "wishart"
)
summary(strict_w_fit)
```

```{r}
# Regression factor scores
dat_y$fsyrw <- lavPredict(strict_w_fit, assemble = TRUE)$f
dat_y |>
    ggplot(aes(x = eta, y = fsyrw, col = group)) +
    geom_point(alpha = 0.1, size = 0.1) +
    geom_smooth(method = "lm", se = FALSE, fullrange = TRUE)
```

### Examining Group $\times$ $w$ interaction

The code below shows that using regression factor scores in place of $\eta$ as the outcome results in a spurious interaction.

```{r}
# No interaction with true latent variable
lm(eta ~ w * group, data = dat_y) |> summary()
# Spurious interaction with regression factor scores
lm(fsyrw ~ w * group, data = dat_y) |> summary()
```

The caveat is one may need to include all potential predictors in the measurement and scoring model. 

## Bartlett Factor Scores

Bartlett factor scores are scalar invariant, so it does not lead to spurious interactions.

```{r}
# Regression factor scores
dat_y$fsyb <- lavPredict(strict_fit, method = "Bartlett", assemble = TRUE)$f
dat_y |>
    ggplot(aes(x = eta, y = fsyb, col = group)) +
    geom_point(alpha = 0.1, size = 0.1) +
    geom_smooth(method = "lm", se = FALSE, fullrange = TRUE)
```

### Examining Group $\times$ $w$ interaction

The code below shows that using regression factor scores in place of $\eta$ as the outcome results in a spurious interaction.

```{r}
# No interaction with true latent variable
lm(eta ~ w * group, data = dat_y) |> summary()
# Spurious interaction with regression factor scores
lm(fsyb ~ w * group, data = dat_y) |> summary()
```